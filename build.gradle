plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {

    mavenLocal()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom("org.springframework.cloud:spring-cloud-dependencies:2023.0.1")
    }
}

dependencies {
    implementation 'com.example.common:common-lib:1.0.0-SNAPSHOT'

    implementation 'org.modelmapper:modelmapper:3.1.0'

    // MapStruct core dependency
    implementation 'org.mapstruct:mapstruct:1.5.5.Final' // Use the latest stable version

    // MapStruct processor for annotation processing
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final' // Use the same version as above


    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-oauth2-resource-server
    implementation("org.springframework.boot:spring-boot-starter-oauth2-resource-server:3.4.5")


    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    implementation 'org.liquibase:liquibase-core'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'




    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}




tasks.named('test') {
    useJUnitPlatform()
}
